{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"UMD-lib","text":"<p> UMD-lib is a Go library to easily extract links from media files hosted on popular websites.  It supports the following sites:  </p>"},{"location":"#license","title":"License","text":"<pre><code>MIT License\n\nCopyright (c) 2024, Vinicius Egidio.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>This library can be installed using Go modules. To do that run the following command in your project's root directory:</p> <pre><code>$ go get github.com/vegidio/umd-lib\n</code></pre>"},{"location":"sites/","title":"Supported Websites","text":"<p>UMD can fetch media information from the following websites:</p> Site Supported extractors  Posts Users  Models Posts  Posts  Posts Users  Submissions Subreddits Users  Videos Users"},{"location":"usage/","title":"Usage","text":"<p>With the library properly installed, you just need to initialize UMD by using <code>umd.New</code> passing any metadata or callback (if needed, otherwise just pass <code>nil</code>). Then, with the newly <code>Umd</code> object you can call the method <code>FindExtractor</code> passing that URL that you want to query.</p> <p>UMD will automatically detect what site/content you're trying to fetch media information; if the URL is not supported then it will return an error.</p> <p>If everything goes well and UMD detects the URL returning a suitable extractor, you can use the methods below:</p>"},{"location":"usage/#querymedia","title":"QueryMedia()","text":"<pre><code>u := umd.New(nil, nil)\nextractor, _ := u.FindExtractor(\"https://www.reddit.com/user/atomicbrunette18\")\nresp, _ := extractor.QueryMedia(100, make([]string, 0), true)\n</code></pre>"}]}